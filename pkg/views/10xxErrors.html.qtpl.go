// Code generated by qtc from "10xxErrors.html.qtpl". DO NOT EDIT.
// See https://github.com/valyala/quicktemplate for details.

//line 10xxErrors.html.qtpl:1
package views

//line 10xxErrors.html.qtpl:1
import (
	qtio422016 "io"

	qt422016 "github.com/valyala/quicktemplate"
)

//line 10xxErrors.html.qtpl:1
var (
	_ = qtio422016.Copy
	_ = qt422016.AcquireByteBuffer
)

//line 10xxErrors.html.qtpl:1
func StreamBuild10xxErrorPageHtml(qw422016 *qt422016.Writer, errorCode int, clientIp string, nodeId string) {
//line 10xxErrors.html.qtpl:1
	qw422016.N().S(`
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1"/>
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />
    <link rel="preconnect" href="https://fonts.gstatic.com" />
    <link href="https://fonts.googleapis.com/css2?family=Red+Hat+Display:wght@500&family=Fira+Mono&family=Ubuntu&display=swap" rel="stylesheet"/>
    <title>`)
//line 10xxErrors.html.qtpl:12
	qw422016.N().D(errorCode)
//line 10xxErrors.html.qtpl:12
	qw422016.N().S(` | AckyCDN-side Error</title>
    <link href="https://fonts.googleapis.com/icon?family=Material+Icons+Outlined" rel="stylesheet"/>
    <style>:root{--background-color:#fff;--font-color:#000;--font-color-lighter:rgb(87,89,88);--font-size-main:3.545rem;--font-size-description:1.245rem;--box-color:#f2f2f2;--working-color:#137333;--working-color-background:#e6f4ea;--error-color-background:#fce8e6;--error-color:#c5221f;--working-with-error-color:#b05a00;--working-with-error-color-background:#fef7e0;--icon-size:48px;}body{margin:2rem 2rem;font-family:"Red Hat Display",Ubuntu,Roboto,Noto Sans SC,sans-serif;color:var(--font-color);background-color:var(--background-color);}header{margin-left:1rem;}header description{font-family:Ubuntu,Roboto,Noto Sans SC,sans-serif;font-size:var(--font-size-description);line-height:var(--font-size-description);color:var(--font-color-lighter);}header main{font-size:var(--font-size-main);line-height:var(--font-size-main);font-family:Fira Mono,Ubuntu,monospace;}code{font-family:Fira Mono,monospace;}none{display:none;}status{margin-top:2.5rem;display:flex;flex-direction:row;flex-wrap:wrap;justify-content:center;align-items:center;}status > card{background-color:var(--box-color);padding:2rem;margin:1rem 1rem;min-height:3rem;border-radius:9px;flex-grow:1;}status > card.green-card{background-color:var(--working-color-background);}status > card.red-card{background-color:var(--error-color-background);}status > card.yellow-card{background-color:var(--working-with-error-color-background);}status > card main{font-size:calc(var(--font-size-description) + 0.1rem);}.green-text{color:var(--working-color);}.red-text{color:var(--error-color);}.yellow-text{color:var(--working-with-error-color);}status-text,reason p{font-family:Ubuntu,Roboto,Noto Sans SC,sans-serif;}reason p{line-height:125%;}icon{font-size:var(--icon-size) !important;}a{text-decoration:none;color:#1967d2;}reason{display:flex;flex-direction:row;flex-wrap:wrap;justify-content:space-between;align-items:baseline;}reason > *{display:block;margin:1rem;flex-grow:1;max-width:40%;}reason main{font-size:calc(var(--font-size-description) + 0.2rem);font-weight:550;}footer{margin:1rem;color:var(--font-color-lighter);font-size:calc(var(--font-size-description) - 0.4rem);}footer > text{font-size:calc(var(--font-size-description) - 0.6rem);}footer > *{display:block;}@media screen and (max-width:480px){body{margin:6rem 2rem;}:root{--font-size-main:3rem;--font-size-description:1.045rem;}reason > *{max-width:100%;}footer{font-size:calc(var(--font-size-description) - 0.2rem);}footer > text{font-size:calc(var(--font-size-description) - 0.4rem);}}@media screen and (min-width:768px){body{margin:8% 10%;}header > *{display:inline-block;margin-left:1%;}}@media (prefers-color-scheme:dark){:root{--font-color:rgba(255,255,255,0.86);--font-color-lighter:rgba(255,255,255,0.4);--background-color:rgb(0,0,0);--box-color:rgb(40 40 40 / 73%);--working-color-background:#07220f;--error-color-background:#270501;--working-with-error-color-background:#392605;}}</style>
    <script defer>document.head.innerHTML += `)
//line 10xxErrors.html.qtpl:12
	qw422016.N().S("`")
//line 10xxErrors.html.qtpl:12
	qw422016.N().S(`<link href="https://fonts.googleapis.com/css2?family=Noto+Sans+SC&display=swap" rel="stylesheet">`)
//line 10xxErrors.html.qtpl:12
	qw422016.N().S("`")
//line 10xxErrors.html.qtpl:12
	qw422016.N().S(`;</script>
</head>

<body>
<header>
    <main>`)
//line 10xxErrors.html.qtpl:20
	qw422016.N().D(errorCode)
//line 10xxErrors.html.qtpl:20
	qw422016.N().S(`</main>
    <description> AckyCDN-side Error </description>
</header>

<status>
    <card class="green-card" id="client-status-card">
        <icon class="material-icons-outlined green-text">web_assets</icon>
        <main>Your Client</main>
        <status-text class="green-text">Working</status-text>
    </card>
    <card class="red-card" id="client-status-card">
        <icon class="material-icons-outlined red-text">cloud</icon>
        <main>AckyCDN Edge Network</main>
        <status-text class="red-text">Error</status-text>
    </card>
    <card class="yellow-card" id="client-status-card">
        <icon class="material-icons-outlined yellow-text">dns</icon>
        <main>Web Server</main>
        <status-text class="yellow-text">Unknown</status-text>
    </card>
</status>
<reason>
    <explain>
        <main>What happened?</main>
        <p>AckyCDN Edge Network reported an error.</p>
    </explain>
    <howtodo>
        <main>What can I do?</main>
        <p>Please try again in a few minutes.</p>
    </howtodo>
</reason>
</body>

<footer>
    <provider>Performance & security by <a href="https://www.ackystack.com/">AckyCDN</a>.</provider>
    <br/>
    <text>
        Your IP: &nbsp;<code> `)
//line 10xxErrors.html.qtpl:57
	qw422016.E().S(clientIp)
//line 10xxErrors.html.qtpl:57
	qw422016.N().S(` </code>
        <br/><br/>
        ENID: &nbsp;<code> `)
//line 10xxErrors.html.qtpl:59
	qw422016.E().S(nodeId)
//line 10xxErrors.html.qtpl:59
	qw422016.N().S(` </code>
        <br/><br/>
    </text>
</footer>
</html>
`)
//line 10xxErrors.html.qtpl:64
}

//line 10xxErrors.html.qtpl:64
func WriteBuild10xxErrorPageHtml(qq422016 qtio422016.Writer, errorCode int, clientIp string, nodeId string) {
//line 10xxErrors.html.qtpl:64
	qw422016 := qt422016.AcquireWriter(qq422016)
//line 10xxErrors.html.qtpl:64
	StreamBuild10xxErrorPageHtml(qw422016, errorCode, clientIp, nodeId)
//line 10xxErrors.html.qtpl:64
	qt422016.ReleaseWriter(qw422016)
//line 10xxErrors.html.qtpl:64
}

//line 10xxErrors.html.qtpl:64
func Build10xxErrorPageHtml(errorCode int, clientIp string, nodeId string) string {
//line 10xxErrors.html.qtpl:64
	qb422016 := qt422016.AcquireByteBuffer()
//line 10xxErrors.html.qtpl:64
	WriteBuild10xxErrorPageHtml(qb422016, errorCode, clientIp, nodeId)
//line 10xxErrors.html.qtpl:64
	qs422016 := string(qb422016.B)
//line 10xxErrors.html.qtpl:64
	qt422016.ReleaseByteBuffer(qb422016)
//line 10xxErrors.html.qtpl:64
	return qs422016
//line 10xxErrors.html.qtpl:64
}
